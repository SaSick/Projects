{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhasick\\\\Desktop\\\\This is patrick\\\\\\u0422\\u0440\\u0435\\u0442\\u0438\\u0439 \\u043A\\u0443\\u0440\\u0441\\\\www\\\\final_project\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    // При монтировании компонента, читаем значение из локального хранилища\n    const storedAuth = localStorage.getItem('auth');\n    return storedAuth ? JSON.parse(storedAuth) : false;\n  });\n  const [shelfContent, setShelfContent] = useState(() => {\n    // То же самое для содержимого полки\n    const storedShelf = localStorage.getItem('shelfContent');\n    return storedShelf ? JSON.parse(storedShelf) : [];\n  });\n  const login = () => {\n    // Пример успешной аутентификации\n    setIsAuthenticated(true);\n    // Сохраняем статус аутентификации в локальное хранилище\n    localStorage.setItem('auth', JSON.stringify(true));\n  };\n  const logout = () => {\n    // Пример выхода из аккаунта\n    setIsAuthenticated(false);\n    setShelfContent([]);\n    // Сохраняем обновленные данные в локальное хранилище\n    localStorage.setItem('auth', JSON.stringify(false));\n    localStorage.setItem('shelfContent', JSON.stringify([]));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      shelfContent,\n      setShelfContent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"EH6rmIhptbrEcXI9kuJusU2yraE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","storedAuth","localStorage","getItem","JSON","parse","shelfContent","setShelfContent","storedShelf","login","setItem","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Zhasick/Desktop/This is patrick/Третий курс/www/final_project/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n        // При монтировании компонента, читаем значение из локального хранилища\r\n        const storedAuth = localStorage.getItem('auth');\r\n        return storedAuth ? JSON.parse(storedAuth) : false;\r\n    });\r\n    const [shelfContent, setShelfContent] = useState(() => {\r\n        // То же самое для содержимого полки\r\n        const storedShelf = localStorage.getItem('shelfContent');\r\n        return storedShelf ? JSON.parse(storedShelf) : [];\r\n    });\r\n\r\n\r\n    const login = () => {\r\n        // Пример успешной аутентификации\r\n        setIsAuthenticated(true);\r\n        // Сохраняем статус аутентификации в локальное хранилище\r\n        localStorage.setItem('auth', JSON.stringify(true));\r\n    };\r\n\r\n    const logout = () => {\r\n        // Пример выхода из аккаунта\r\n        setIsAuthenticated(false);\r\n        setShelfContent([]);\r\n        // Сохраняем обновленные данные в локальное хранилище\r\n        localStorage.setItem('auth', JSON.stringify(false));\r\n        localStorage.setItem('shelfContent', JSON.stringify([]));\r\n    };\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout, shelfContent, setShelfContent }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACzD;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,KAAK;EACtD,CAAC,CAAC;EACF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,MAAM;IACnD;IACA,MAAMgB,WAAW,GAAGN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,OAAOK,WAAW,GAAGJ,IAAI,CAACC,KAAK,CAACG,WAAW,CAAC,GAAG,EAAE;EACrD,CAAC,CAAC;EAGF,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAChB;IACAT,kBAAkB,CAAC,IAAI,CAAC;IACxB;IACAE,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAZ,kBAAkB,CAAC,KAAK,CAAC;IACzBO,eAAe,CAAC,EAAE,CAAC;IACnB;IACAL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAAC,KAAK,CAAC,CAAC;IACnDT,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEN,IAAI,CAACO,SAAS,CAAC,EAAE,CAAC,CAAC;EAC5D,CAAC;EAGD,oBACIjB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,eAAe;MAAEU,KAAK;MAAEG,MAAM;MAAEN,YAAY;MAAEC;IAAgB,CAAE;IAAAV,QAAA,EAC1FA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACpB,EAAA,CAnCWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAqCzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAO9B,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;AAAC0B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}