{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhasick\\\\Desktop\\\\This is patrick\\\\\\u0422\\u0440\\u0435\\u0442\\u0438\\u0439 \\u043A\\u0443\\u0440\\u0441\\\\www\\\\final_project\\\\src\\\\components\\\\AddForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddForm = ({\n  bookInfo\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    shelfContent,\n    addToShelf\n  } = useAuth();\n  const handleAddBook = () => {\n    if (!isAuthenticated) {\n      // Если пользователь не авторизован, выполните необходимые действия (показ сообщения, перенаправление на страницу входа и т. д.)\n      alert(\"Please log in to add books to your shelf.\");\n      return;\n    }\n\n    // Проверка наличия необходимых свойств\n    if (bookInfo && bookInfo.volumeInfo) {\n      // Создаем объект новой книги\n      const newBook = {\n        id: bookInfo.id,\n        // Используем id из информации о книге\n        title: bookInfo.volumeInfo.title,\n        authors: bookInfo.volumeInfo.authors || [] // Проверяем наличие авторов\n        // Другие свойства книги...\n      };\n\n      // Проверка наличия книги в полке\n      const isBookInShelf = shelfContent.some(book => book.id === newBook.id);\n      if (!isBookInShelf) {\n        // Если книги нет в полке, добавляем ее\n        addToShelf(newBook);\n      } else {\n        // Если книга уже есть в полке, можно показать сообщение или выполнить другие действия\n        alert(\"This book is already in your shelf!\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div-btn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddBook,\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(AddForm, \"SpqedTgRHlAr8USb6WwZ/1eVKtA=\", false, function () {\n  return [useAuth];\n});\n_c = AddForm;\nexport default AddForm;\nvar _c;\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"names":["React","useAuth","jsxDEV","_jsxDEV","AddForm","bookInfo","_s","isAuthenticated","shelfContent","addToShelf","handleAddBook","alert","volumeInfo","newBook","id","title","authors","isBookInShelf","some","book","className","children","onSubmit","e","preventDefault","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zhasick/Desktop/This is patrick/Третий курс/www/final_project/src/components/AddForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst AddForm = ({ bookInfo }) => {\r\n    const { isAuthenticated, shelfContent, addToShelf } = useAuth();\r\n\r\n    const handleAddBook = () => {\r\n        if (!isAuthenticated) {\r\n            // Если пользователь не авторизован, выполните необходимые действия (показ сообщения, перенаправление на страницу входа и т. д.)\r\n            alert(\"Please log in to add books to your shelf.\");\r\n            return;\r\n        }\r\n\r\n        // Проверка наличия необходимых свойств\r\n        if (bookInfo && bookInfo.volumeInfo) {\r\n            // Создаем объект новой книги\r\n            const newBook = {\r\n                id: bookInfo.id, // Используем id из информации о книге\r\n                title: bookInfo.volumeInfo.title,\r\n                authors: bookInfo.volumeInfo.authors || [], // Проверяем наличие авторов\r\n                // Другие свойства книги...\r\n            };\r\n\r\n            // Проверка наличия книги в полке\r\n            const isBookInShelf = shelfContent.some((book) => book.id === newBook.id);\r\n\r\n            if (!isBookInShelf) {\r\n                // Если книги нет в полке, добавляем ее\r\n                addToShelf(newBook);\r\n            } else {\r\n                // Если книга уже есть в полке, можно показать сообщение или выполнить другие действия\r\n                alert(\"This book is already in your shelf!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={\"div-btn\"}>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <button onClick={handleAddBook}>Add Book</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM;IAAEC,eAAe;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE/D,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACH,eAAe,EAAE;MAClB;MACAI,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACJ;;IAEA;IACA,IAAIN,QAAQ,IAAIA,QAAQ,CAACO,UAAU,EAAE;MACjC;MACA,MAAMC,OAAO,GAAG;QACZC,EAAE,EAAET,QAAQ,CAACS,EAAE;QAAE;QACjBC,KAAK,EAAEV,QAAQ,CAACO,UAAU,CAACG,KAAK;QAChCC,OAAO,EAAEX,QAAQ,CAACO,UAAU,CAACI,OAAO,IAAI,EAAE,CAAE;QAC5C;MACJ,CAAC;;MAED;MACA,MAAMC,aAAa,GAAGT,YAAY,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKD,OAAO,CAACC,EAAE,CAAC;MAEzE,IAAI,CAACG,aAAa,EAAE;QAChB;QACAR,UAAU,CAACI,OAAO,CAAC;MACvB,CAAC,MAAM;QACH;QACAF,KAAK,CAAC,qCAAqC,CAAC;MAChD;IACJ;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKiB,SAAS,EAAE,SAAU;IAAAC,QAAA,eACtBlB,OAAA;MAAMmB,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;MAAAH,QAAA,eACtClB,OAAA;QAAQsB,OAAO,EAAEf,aAAc;QAAAW,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACvB,EAAA,CAxCIF,OAAO;EAAA,QAC6CH,OAAO;AAAA;AAAA6B,EAAA,GAD3D1B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}