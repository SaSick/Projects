{"ast":null,"code":"import React from 'react';\nimport { Navigate } from \"react-router-dom\";\nconst PrivateRoute = ({\n  element,\n  ...rest\n}) => {\n  const isAuthenticated = () => {\n    // Здесь можно добавить логику проверки аутентификации (например, проверку токена или другие механизмы)\n    // В данном примере всегда возвращает true для тестирования\n    return true;\n  };\n\n  // return isAuthenticated() ? (\n  //     element\n  // ) : (\n  //     <Navigate to=\"/loginpage\" state={{ from: rest.location.pathname }}/>\n  // );\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","PrivateRoute","element","rest","isAuthenticated","_c","$RefreshReg$"],"sources":["C:/Users/Zhasick/Desktop/This is patrick/Третий курс/www/final_project/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ element, ...rest }) => {\r\n    const isAuthenticated = () => {\r\n        // Здесь можно добавить логику проверки аутентификации (например, проверку токена или другие механизмы)\r\n        // В данном примере всегда возвращает true для тестирования\r\n        return true;\r\n    };\r\n\r\n    // return isAuthenticated() ? (\r\n    //     element\r\n    // ) : (\r\n    //     <Navigate to=\"/loginpage\" state={{ from: rest.location.pathname }}/>\r\n    // );\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,kBAAkB;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA,OAAO,IAAI;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACC,EAAA,GAZIJ,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}