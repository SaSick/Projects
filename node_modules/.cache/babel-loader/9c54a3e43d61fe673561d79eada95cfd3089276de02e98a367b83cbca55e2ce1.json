{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhasick\\\\Desktop\\\\This is patrick\\\\\\u0422\\u0440\\u0435\\u0442\\u0438\\u0439 \\u043A\\u0443\\u0440\\u0441\\\\www\\\\final_project\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: '/shelf'\n    }\n  };\n  const handleLogin = () => {\n    // Здесь вы можете добавить логику проверки логина/пароля\n    // В данном случае просто перенаправим пользователя на предыдущую страницу (или на /)\n    navigate(from);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-log\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","useLocation","jsxDEV","_jsxDEV","Login","_s","navigate","location","from","state","pathname","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Zhasick/Desktop/This is patrick/Третий курс/www/final_project/src/pages/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: '/shelf' } };\r\n\r\n    const handleLogin = () => {\r\n        // Здесь вы можете добавить логику проверки логина/пароля\r\n        // В данном случае просто перенаправим пользователя на предыдущую страницу (или на /)\r\n        navigate(from);\r\n    };\r\n\r\n    return (\r\n        <div className={\"main-log\"}>\r\n            <h1>Login</h1>\r\n            <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI;IAAED,IAAI,EAAE;MAAEE,QAAQ,EAAE;IAAS;EAAE,CAAC;EAEnE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;IACAL,QAAQ,CAACE,IAAI,CAAC;EAClB,CAAC;EAED,oBACIL,OAAA;IAAKS,SAAS,EAAE,UAAW;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdd,OAAA;MAAQe,OAAO,EAAEP,WAAY;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd,CAAC;AAACZ,EAAA,CAjBID,KAAK;EAAA,QACUJ,WAAW,EACXC,WAAW;AAAA;AAAAkB,EAAA,GAF1Bf,KAAK;AAmBX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}